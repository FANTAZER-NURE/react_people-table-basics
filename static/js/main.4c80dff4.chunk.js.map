{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/PageNavLink.tsx","components/MainNav.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","people","person","isSelected","mother","find","pers","name","motherName","father","fatherName","classNames","to","slug","sex","born","died","PeopleTable","selectedSlug","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoaded","setIsLoaded","hasError","setHasError","personSlug","useParams","useEffect","res","catch","length","PageNavLink","text","isActive","MainNav","role","App","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.4c80dff4.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => {\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  people: Person[],\n  person: Person,\n  isSelected: (person: Person) => boolean,\n};\n\nexport const PersonLink: React.FC<Props> = ({ people, person, isSelected }) => {\n  const mother = people.find(pers => pers.name === person.motherName);\n  const father = people.find(pers => pers.name === person.fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': isSelected(person) },\n      )}\n    >\n      <td>\n        <Link\n          to={`../${person.slug}`}\n          className={classNames(\n            { 'has-text-danger': person.sex === 'f' },\n          )}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {mother\n          ? (\n            <Link\n              className={classNames(\n                { 'has-text-danger': mother.sex === 'f' },\n              )}\n              to={`../${mother.slug}`}\n            >\n              {person.motherName}\n            </Link>\n          )\n          : (\n            <p>\n              {person.motherName || '-'}\n            </p>\n          )}\n      </td>\n\n      <td>\n        {father\n          ? (\n            <Link\n              className={classNames(\n                { 'has-text-danger': father.sex === 'f' },\n              )}\n              to={`../${father.slug}`}\n            >\n              {person.fatherName || '-'}\n            </Link>\n          )\n          : person.fatherName || '-'}\n\n      </td>\n    </tr>\n  );\n};\n","// import classNames from 'classnames';\n// import { Link } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n  selectedSlug: string | undefined,\n};\n\nexport const PeopleTable:React.FC<Props> = ({ people, selectedSlug }) => {\n  const isSelected = (person: Person) => person.slug === selectedSlug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            people={people}\n            person={person}\n            isSelected={isSelected}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const { personSlug } = useParams();\n\n  useEffect(() => {\n    getPeople()\n      .then(res => {\n        setPeople(res);\n        setIsLoading(false);\n        setIsLoaded(true);\n      })\n      .catch(() => {\n        setHasError(true);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            && <Loader />}\n          {hasError\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n          {people.length === 0 && !hasError\n            && (\n              <p data-cy=\"noPeopleMessage\" className=\"has-text-danger\">\n                no people\n              </p>\n            )}\n          {isLoaded && people.length > 0\n            && (\n              <PeopleTable people={people} selectedSlug={personSlug} />\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => (\n        classNames('navbar-item',\n          { 'has-background-grey-lighter': isActive })\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport { MainNav } from './components/MainNav';\n// import { PageNavLink } from './components/PageNavLink';\n// import { PeoplePage } from './components/PeoplePage';\n// import { Loader } from './components/Loader';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { PeoplePage } from './components/PeoplePage';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route index element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people/\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}